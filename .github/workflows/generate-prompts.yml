name: Generate Midjourney Prompts

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:      # Allow manual trigger

permissions:
  contents: write        # Required for pushing changes

env:
  SENDER_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  generate:
    runs-on: ubuntu-latest
    
    # Ensure only one workflow runs at a time
    concurrency:
      group: generate-prompts
      cancel-in-progress: false
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the automatic GITHUB_TOKEN
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Verify environment variables
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "Error: OPENAI_API_KEY is not set"
            exit 1
          fi
          if [ -z "$ASSISTANT_ID" ]; then
            echo "Error: ASSISTANT_ID is not set"
            exit 1
          fi
          echo "Environment variables are properly set"
          # Verify API key format (should start with 'sk-')
          if [[ ! "$OPENAI_API_KEY" =~ ^sk- ]]; then
            echo "Error: OPENAI_API_KEY format is incorrect. Should start with 'sk-'"
            exit 1
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}

      - name: Generate prompts
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
        run: |
          echo "Starting prompt generation..."
          python generate_prompts.py -n 5  # Generate 5 prompts per hour
      
      - name: Configure Git
        id: git_config
        run: |
          echo "Configuring Git..."
          if ! git config user.name "GitHub Actions Bot"; then
            echo "Error: Failed to set Git user name"
            exit 1
          fi
          if ! git config user.email "actions@github.com"; then
            echo "Error: Failed to set Git user email"
            exit 1
          fi
          # Verify git configuration
          git_name=$(git config user.name)
          git_email=$(git config user.email)
          echo "Git configured with:"
          echo "User name: $git_name"
          echo "User email: $git_email"
          if [ "$git_name" != "GitHub Actions Bot" ] || [ "$git_email" != "actions@github.com" ]; then
            echo "Error: Git configuration verification failed"
            exit 1
          fi
          echo "Git configuration successful"
      
      - name: Process files and prepare email
        id: process
        run: |
          today=$(date +%y%m%d)
          yesterday=$(date -d "yesterday" +%y%m%d)
          today_file="midjourney_prompts_${today}.txt"
          yesterday_file="midjourney_prompts_${yesterday}.txt"
          
          # Commit today's file if it exists
          if [[ -f "$today_file" ]]; then
            echo "Found today's file: $today_file"
            if ! git add "$today_file"; then
              echo "Error: Failed to stage file"
              exit 1
            fi
            timestamp=$(date -u)
            if ! git commit -m "Auto-generate prompts: ${timestamp}"; then
              echo "Error: Failed to commit changes"
              exit 1
            fi
            if ! git push; then
              echo "Error: Failed to push changes"
              exit 1
            fi
            echo "Successfully pushed changes"
          fi
          
          # Check for yesterday's file at 4 AM GMT+7
          current_hour=$(TZ='Asia/Bangkok' date +%H)
          if [[ "$current_hour" == "04" && -f "$yesterday_file" ]]; then
            echo "SEND_EMAIL=true" >> $GITHUB_ENV
            echo "ATTACHMENT_FILE=$yesterday_file" >> $GITHUB_ENV
          else
            echo "SEND_EMAIL=false" >> $GITHUB_ENV
          fi

      - name: Send email with yesterday's prompts
        if: env.SEND_EMAIL == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Yesterday's Midjourney Prompts
          from: ${{ env.SENDER_EMAIL }}
          to: ${{ secrets.EMAIL_TO }}
          body: |
            Yesterday's Midjourney prompts are attached.
            
            Repository: ${{ github.repository }}
            Filename: ${{ env.ATTACHMENT_FILE }}
          attachments: ${{ env.ATTACHMENT_FILE }}
